<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1440422593410">{:repl-history {:ide [], :local [&quot;(var foo \&quot;foo\&quot;)&quot; &quot;(def foo \&quot;foo\&quot;)&quot; &quot;(import java.util.Locale)&quot; &quot;(str \&quot;foo\&quot;)&quot; &quot;(str (Locale/getDefault))&quot; &quot;(defn get-dropbox-auth []\n  (let [app-info (DbxAppInfo. (:key dropbox-info) (:secret dropbox-info))\n        req-config (DbxRequestConfig. \&quot;Omnia\&quot; (str (Locale/getDefault)))]\n    (DbxWebAuthNoRedirect. req-config app-info)))&quot; &quot;(def auth (get-dropbox-auth))&quot; &quot;auth&quot; &quot;(.start auth)&quot; &quot;(.finish auth \&quot;VH5oXhs6bCAAAAAAAACRKZx4Kky1gz895AYuT3o7va4\&quot;)&quot; &quot;(def finish (.finish auth \&quot;VH5oXhs6bCAAAAAAAACRKZx4Kky1gz895AYuT3o7va4\&quot;))&quot; &quot;(def finish *1)&quot; &quot;finish&quot; &quot;(.accessToken finish)&quot; &quot;*1&quot; &quot;(def client *1)&quot; &quot;(-&gt; client\n    .getAccountInfo\n    .displayName\n    )&quot; &quot;(get-dropbox-client)&quot; &quot;(defn get-root-files []\n  (-&gt; (get-dropbox-client)\n      (.getMetadataWithChildren \&quot;/\&quot;)\n      .children\n      (filter #(.isFile %))\n      ))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it)))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it))\n        (do\n          (println (.name it))\n          (.getFile client (.name it) nil *out*)))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it)\n        (do\n          (println (.name it))\n          (.getFile client (.name it) nil *out*))))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it)\n        (doseq [file it]\n          (println (.name it))\n          (.getFile client (.name it) nil *out*))))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it)\n        (doseq [file it]\n          (println (.name file))\n          (.getFile client (.name file) nil *out*))))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it)\n        (doseq [file it]\n          (println (.name file))\n          (.getFile client (.name file) nil System/out))))&quot; &quot;(defn get-root-files []\n  (as-&gt; (get-dropbox-client) it\n        (.getMetadataWithChildren it\&quot;/\&quot;)\n        (.children it)\n        (filter #(.isFile %) it)\n        (doseq [file it]\n          (println (.name file))\n          (.getFile client (.path file) nil System/out))))&quot; &quot;(get-root-files)&quot;], :remote []}}</component>
</project>